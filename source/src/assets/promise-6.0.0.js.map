{"version":3,"file":"/polyfills/promise-6.0.0.js.map","sources":["promise-6.0.0.js-sources/node_modules/browserify/node_modules/browser-pack/_prelude.js","promise-6.0.0.js-sources/node_modules/browserify/node_modules/process/browser.js","promise-6.0.0.js-sources/node_modules/promise/lib/core.js","promise-6.0.0.js-sources/node_modules/promise/lib/es6-extensions.js","promise-6.0.0.js-sources/node_modules/promise/node_modules/asap/asap.js","promise-6.0.0.js-sources/node_modules/promise/polyfill-done.js","promise-6.0.0.js-sources/node_modules/promise/polyfill.js"],"names":[],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n","'use strict';\r\n\r\nvar asap = require('asap')\r\n\r\nmodule.exports = Promise;\r\nfunction Promise(fn) {\r\n  if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new')\r\n  if (typeof fn !== 'function') throw new TypeError('not a function')\r\n  var state = null\r\n  var value = null\r\n  var deferreds = []\r\n  var self = this\r\n\r\n  this.then = function(onFulfilled, onRejected) {\r\n    return new self.constructor(function(resolve, reject) {\r\n      handle(new Handler(onFulfilled, onRejected, resolve, reject))\r\n    })\r\n  }\r\n\r\n  function handle(deferred) {\r\n    if (state === null) {\r\n      deferreds.push(deferred)\r\n      return\r\n    }\r\n    asap(function() {\r\n      var cb = state ? deferred.onFulfilled : deferred.onRejected\r\n      if (cb === null) {\r\n        (state ? deferred.resolve : deferred.reject)(value)\r\n        return\r\n      }\r\n      var ret\r\n      try {\r\n        ret = cb(value)\r\n      }\r\n      catch (e) {\r\n        deferred.reject(e)\r\n        return\r\n      }\r\n      deferred.resolve(ret)\r\n    })\r\n  }\r\n\r\n  function resolve(newValue) {\r\n    try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\r\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.')\r\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\r\n        var then = newValue.then\r\n        if (typeof then === 'function') {\r\n          doResolve(then.bind(newValue), resolve, reject)\r\n          return\r\n        }\r\n      }\r\n      state = true\r\n      value = newValue\r\n      finale()\r\n    } catch (e) { reject(e) }\r\n  }\r\n\r\n  function reject(newValue) {\r\n    state = false\r\n    value = newValue\r\n    finale()\r\n  }\r\n\r\n  function finale() {\r\n    for (var i = 0, len = deferreds.length; i < len; i++)\r\n      handle(deferreds[i])\r\n    deferreds = null\r\n  }\r\n\r\n  doResolve(fn, resolve, reject)\r\n}\r\n\r\n\r\nfunction Handler(onFulfilled, onRejected, resolve, reject){\r\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null\r\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null\r\n  this.resolve = resolve\r\n  this.reject = reject\r\n}\r\n\r\n/**\r\n * Take a potentially misbehaving resolver function and make sure\r\n * onFulfilled and onRejected are only called once.\r\n *\r\n * Makes no guarantees about asynchrony.\r\n */\r\nfunction doResolve(fn, onFulfilled, onRejected) {\r\n  var done = false;\r\n  try {\r\n    fn(function (value) {\r\n      if (done) return\r\n      done = true\r\n      onFulfilled(value)\r\n    }, function (reason) {\r\n      if (done) return\r\n      done = true\r\n      onRejected(reason)\r\n    })\r\n  } catch (ex) {\r\n    if (done) return\r\n    done = true\r\n    onRejected(ex)\r\n  }\r\n}\r\n","'use strict';\r\n\r\n//This file contains the ES6 extensions to the core Promises/A+ API\r\n\r\nvar Promise = require('./core.js')\r\nvar asap = require('asap')\r\n\r\nmodule.exports = Promise\r\n\r\n/* Static Functions */\r\n\r\nfunction ValuePromise(value) {\r\n  this.then = function (onFulfilled) {\r\n    if (typeof onFulfilled !== 'function') return this\r\n    return new Promise(function (resolve, reject) {\r\n      asap(function () {\r\n        try {\r\n          resolve(onFulfilled(value))\r\n        } catch (ex) {\r\n          reject(ex);\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\nValuePromise.prototype = Promise.prototype\r\n\r\nvar TRUE = new ValuePromise(true)\r\nvar FALSE = new ValuePromise(false)\r\nvar NULL = new ValuePromise(null)\r\nvar UNDEFINED = new ValuePromise(undefined)\r\nvar ZERO = new ValuePromise(0)\r\nvar EMPTYSTRING = new ValuePromise('')\r\n\r\nPromise.resolve = function (value) {\r\n  if (value instanceof Promise) return value\r\n\r\n  if (value === null) return NULL\r\n  if (value === undefined) return UNDEFINED\r\n  if (value === true) return TRUE\r\n  if (value === false) return FALSE\r\n  if (value === 0) return ZERO\r\n  if (value === '') return EMPTYSTRING\r\n\r\n  if (typeof value === 'object' || typeof value === 'function') {\r\n    try {\r\n      var then = value.then\r\n      if (typeof then === 'function') {\r\n        return new Promise(then.bind(value))\r\n      }\r\n    } catch (ex) {\r\n      return new Promise(function (resolve, reject) {\r\n        reject(ex)\r\n      })\r\n    }\r\n  }\r\n\r\n  return new ValuePromise(value)\r\n}\r\n\r\nPromise.all = function (arr) {\r\n  var args = Array.prototype.slice.call(arr)\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    if (args.length === 0) return resolve([])\r\n    var remaining = args.length\r\n    function res(i, val) {\r\n      try {\r\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\r\n          var then = val.then\r\n          if (typeof then === 'function') {\r\n            then.call(val, function (val) { res(i, val) }, reject)\r\n            return\r\n          }\r\n        }\r\n        args[i] = val\r\n        if (--remaining === 0) {\r\n          resolve(args);\r\n        }\r\n      } catch (ex) {\r\n        reject(ex)\r\n      }\r\n    }\r\n    for (var i = 0; i < args.length; i++) {\r\n      res(i, args[i])\r\n    }\r\n  })\r\n}\r\n\r\nPromise.reject = function (value) {\r\n  return new Promise(function (resolve, reject) { \r\n    reject(value);\r\n  });\r\n}\r\n\r\nPromise.race = function (values) {\r\n  return new Promise(function (resolve, reject) { \r\n    values.forEach(function(value){\r\n      Promise.resolve(value).then(resolve, reject);\r\n    })\r\n  });\r\n}\r\n\r\n/* Prototype Methods */\r\n\r\nPromise.prototype['catch'] = function (onRejected) {\r\n  return this.then(null, onRejected);\r\n}\r\n","(function (process){\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\n\n// linked list of tasks (single, with head node)\nvar head = {task: void 0, next: null};\nvar tail = head;\nvar flushing = false;\nvar requestFlush = void 0;\nvar isNodeJS = false;\n\nfunction flush() {\n    /* jshint loopfunc: true */\n\n    while (head.next) {\n        head = head.next;\n        var task = head.task;\n        head.task = void 0;\n        var domain = head.domain;\n\n        if (domain) {\n            head.domain = void 0;\n            domain.enter();\n        }\n\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function() {\n                   throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    flushing = false;\n}\n\nif (typeof process !== \"undefined\" && process.nextTick) {\n    // Node.js before 0.9. Note that some fake-Node environments, like the\n    // Mocha test runner, introduce a `process` global without a `nextTick`.\n    isNodeJS = true;\n\n    requestFlush = function () {\n        process.nextTick(flush);\n    };\n\n} else if (typeof setImmediate === \"function\") {\n    // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n    if (typeof window !== \"undefined\") {\n        requestFlush = setImmediate.bind(window, flush);\n    } else {\n        requestFlush = function () {\n            setImmediate(flush);\n        };\n    }\n\n} else if (typeof MessageChannel !== \"undefined\") {\n    // modern browsers\n    // http://www.nonblocking.io/2011/06/windownexttick.html\n    var channel = new MessageChannel();\n    channel.port1.onmessage = flush;\n    requestFlush = function () {\n        channel.port2.postMessage(0);\n    };\n\n} else {\n    // old browsers\n    requestFlush = function () {\n        setTimeout(flush, 0);\n    };\n}\n\nfunction asap(task) {\n    tail = tail.next = {\n        task: task,\n        domain: isNodeJS && process.domain,\n        next: null\n    };\n\n    if (!flushing) {\n        flushing = true;\n        requestFlush();\n    }\n};\n\nmodule.exports = asap;\n\n\n}).call(this,require('_process'))","// should work in any browser without browserify\r\n\r\nif (typeof Promise.prototype.done !== 'function') {\r\n  Promise.prototype.done = function (onFulfilled, onRejected) {\r\n    var self = arguments.length ? this.then.apply(this, arguments) : this\r\n    self.then(null, function (err) {\r\n      setTimeout(function () {\r\n        throw err\r\n      }, 0)\r\n    })\r\n  }\r\n}","// not \"use strict\" so we can declare global \"Promise\"\r\n\r\nvar asap = require('asap');\r\n\r\nif (typeof Promise === 'undefined') {\r\n  Promise = require('./lib/core.js')\r\n  require('./lib/es6-extensions.js')\r\n}\r\n\r\nrequire('./polyfill-done.js');\r\n"]}